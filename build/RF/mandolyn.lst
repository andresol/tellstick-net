     1: #include "mandolyn.h"
     2: #include "receive.h"
     3: #include "message.h"
     4: #include <stdio.h>
     5: 
     6: #define ZERO(x) (x>=30 && x<=40)
     7: #define SHORT(x) (x>=10 && x<=20)
     8: #define ONE(x,y) (SHORT(x) && SHORT(y))
     9: 
    10: #define INVALID_DATA 2
    11: 
    12: // For some reason this must be a global variable (non const) or else printf() seems to behave strange!
    13: char MODEL[] = "temperaturehumidity";
    14: 
    15: unsigned char mandolynBit(unsigned short *scanP, unsigned char *scanBit) {
    16:         UCHAR8 b1 = rfCountSimilar(scanP, scanBit);
    17:         if (ZERO(b1)) {
    18:                 return 0;
    19:         }
    20:         UCHAR8 b2 = rfCountSimilar(scanP, scanBit);
    21:         if (ONE(b1,b2)) {
    22:                 return 1;
    23:         }
    24:         return INVALID_DATA;
    25: }
    26: 
    27: char parseMandolyn(unsigned short scanP, unsigned char scanBit) {
    28:         unsigned short P, B;
    29:         unsigned char preamble = 0;
    30:         unsigned long data = 0;
    31:         unsigned long mask = 1;
    32: 
    33:         rfRetreatBit(&scanP, &scanBit); //skip last bit
    34:         rfCountSimilar(&scanP, &scanBit); //skip last pulse
    35: 
    36:         P = scanP; B = scanBit;
    37: 
    38:         for(int i=0;i<32;++i){
    39:                 UCHAR8 b = mandolynBit(&scanP, &scanBit);
    40:                 if (b == INVALID_DATA) {
    41:                         return 0;
    42:                 }
    43:                 if (b) {
    44:                         data |= mask;
    45:                 }
    46:                 mask <<= 1;
    47:         }
    48: 
    49:         for(int i=0;i<4;++i){
    50:                 UCHAR8 b = mandolynBit(&scanP, &scanBit);
    51:                 if (b == INVALID_DATA) {
    52:                         return 0;
    53:                 }
    54:                 if (b) {
    55:                         preamble |= (1<<i);
    56:                 }
    57:         }
    58:         if (preamble != 0xC) {
    59:                 return 0;
    60:         }
    61: 
    62:         rfMessageBeginRaw();
    63:                 rfMessageAddString("class", "sensor");
    64:                 rfMessageAddString("protocol", "mandolyn");
    65:                 rfMessageAddString("model", MODEL);
    66:                 rfMessageAddLong("data", data);
    67:         rfMessageEnd(1);
    68:         return 1;
    69: }
