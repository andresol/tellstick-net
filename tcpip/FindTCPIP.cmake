
SET(_SOURCES
	ARP.c
	Helpers.c
	ICMP.c
	IP.c
	StackTsk.c
	Tick.c
)

IF(TCPIP_USE_REBOOT)
	SET(TCPIP_USE_UDP TRUE)
	LIST(APPEND _SOURCES Reboot.c)
ENDIF(TCPIP_USE_REBOOT)

IF(TCPIP_USE_DNS)
	SET(TCPIP_USE_UDP TRUE)
	LIST(APPEND _SOURCES DNS.c)
ENDIF(TCPIP_USE_DNS)

IF(TCPIP_USE_DHCP)
	SET(TCPIP_USE_UDP TRUE)
	LIST(APPEND _SOURCES DHCP.c)
ENDIF(TCPIP_USE_DHCP)

IF(TCPIP_USE_UDP)
	LIST(APPEND _SOURCES UDP.c)
ENDIF(TCPIP_USE_UDP)

IF(TCPIP_USE_ETH97J60)
	LIST(APPEND _SOURCES ETH97J60.c)
ENDIF(TCPIP_USE_ETH97J60)

IF(TCPIP_USE_SSL)
	SET(TCPIP_USE_TCP TRUE)
	LIST(APPEND _SOURCES
	  SSL.c
	)
ENDIF(TCPIP_USE_SSL)

IF(TCPIP_USE_TCP)
	LIST(APPEND _SOURCES TCP.c)
ENDIF(TCPIP_USE_TCP)

IF(TCPIP_USE_HASHES)
	LIST(APPEND _SOURCES Hashes.c)
ENDIF(TCPIP_USE_HASHES)


FOREACH(_file ${_SOURCES})
	GET_FILENAME_COMPONENT(_abs_file ${CMAKE_CURRENT_LIST_DIR}/${_file} ABSOLUTE)
	SET_PROPERTY(
		SOURCE ${_abs_file}
		PROPERTY P1_PATH "TCPIP"
	)

	LIST(APPEND TCPIP_SOURCES ${_abs_file})
ENDFOREACH(_file)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_LIST_DIR})
IF ("${CHIP}" STREQUAL "18F66J60")
	LIST(APPEND CMAKE_EXE_LINKER_FLAGS "--ROM=default,-D000-FFFF")
ELSE()
	LIST(APPEND CMAKE_EXE_LINKER_FLAGS "--ROM=default,-1D000-1FCFF")
ENDIF()

FUNCTION(TCPIP_BOOTLOAD _target)
	SET(DO_BOOTLOADING_OVER_TCPIP TRUE CACHE BOOL "Do bootloading after compilation")
	SET(DEVICE_ADDRESS "192.168.97.60" CACHE STRING "The ip used for bootloading the device")

	IF(DO_BOOTLOADING_OVER_TCPIP)
		GET_TARGET_PROPERTY(_hex_file ${_target} HEX_FILE)
		ADD_CUSTOM_COMMAND(TARGET ${_target} POST_BUILD
			COMMAND atftp -p -l ${CMAKE_CURRENT_BINARY_DIR}/${_hex_file} --tftp-timeout 1 ${DEVICE_ADDRESS}
			DEPENDS ${_hex_file}
			COMMENT "Downloading ${_hex_file} to ${DEVICE_ADDRESS}"
		)
	ENDIF(DO_BOOTLOADING_OVER_TCPIP)
ENDFUNCTION(TCPIP_BOOTLOAD)
